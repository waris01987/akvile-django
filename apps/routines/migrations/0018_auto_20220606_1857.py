# Generated by Django 3.2.13 on 2022-06-06 18:57

import apps.routines
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("routines", "0017_alter_prediction_prediction_type"),
    ]

    operations = [
        migrations.AlterField(
            model_name="usertag",
            name="category",
            field=models.CharField(
                choices=[
                    ("SKIN_CARE", "SKIN_CARE"),
                    ("WELL_BEING", "WELL_BEING"),
                    ("NUTRITION", "NUTRITION"),
                    ("HEALTH_CARE", "HEALTH_CARE"),
                ],
                max_length=30,
            ),
        ),
        migrations.CreateModel(
            name="HealthCareEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, default="", max_length=300)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("MEDICATION", "MEDICATION"),
                            ("APPOINTMENT", "APPOINTMENT"),
                            ("MENSTRUATION", "MENSTRUATION"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "medication_type",
                    models.CharField(
                        blank=True,
                        choices=[("PILL", "PILL"), ("SKIN", "SKIN")],
                        default="",
                        max_length=30,
                    ),
                ),
                ("start_date", models.DateField(help_text="start date for the event")),
                (
                    "duration",
                    models.PositiveSmallIntegerField(
                        blank=True, help_text="event duration in days", null=True
                    ),
                ),
                (
                    "time",
                    models.TimeField(
                        blank=True, help_text="time for the event", null=True
                    ),
                ),
                (
                    "event_tags",
                    models.ManyToManyField(
                        limit_choices_to={"category": ["HEALTH_CARE"]},
                        related_name="health_care_event_tags",
                        to="routines.UserTag",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="health_care_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="healthcareevent",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("duration__isnull", False),
                        (
                            "event_type",
                            apps.routines.HealthCareEventTypes["MEDICATION"],
                        ),
                        ("time__isnull", True),
                        models.Q(("medication_type", ""), _negated=True),
                        models.Q(("name", ""), _negated=True),
                    ),
                    models.Q(
                        ("duration__isnull", False),
                        (
                            "event_type",
                            apps.routines.HealthCareEventTypes["MENSTRUATION"],
                        ),
                        ("medication_type", ""),
                        ("name", ""),
                        ("time__isnull", True),
                    ),
                    models.Q(
                        ("duration__isnull", True),
                        (
                            "event_type",
                            apps.routines.HealthCareEventTypes["APPOINTMENT"],
                        ),
                        ("medication_type", ""),
                        ("time__isnull", False),
                        models.Q(("name", ""), _negated=True),
                    ),
                    _connector="OR",
                ),
                name="check valid event",
            ),
        ),
    ]
